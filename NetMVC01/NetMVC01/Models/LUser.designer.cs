#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetMVC01.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mirim2018")]
	public partial class LUserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertTUser3513(TUser3513 instance);
    partial void UpdateTUser3513(TUser3513 instance);
    partial void DeleteTUser3513(TUser3513 instance);
    #endregion
		
		public LUserDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Mirim2018ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TUser3513> TUser3513
		{
			get
			{
				return this.GetTable<TUser3513>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUser3513")]
	public partial class TUser3513 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _theUniqueID;
		
		private string _theID;
		
		private string _thePW;
		
		private string _theName;
		
		private string _theEMail;
		
		private int _bSubscription;
		
		private System.DateTime _theDate;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntheUniqueIDChanging(int value);
    partial void OntheUniqueIDChanged();
    partial void OntheIDChanging(string value);
    partial void OntheIDChanged();
    partial void OnthePWChanging(string value);
    partial void OnthePWChanged();
    partial void OntheNameChanging(string value);
    partial void OntheNameChanged();
    partial void OntheEMailChanging(string value);
    partial void OntheEMailChanged();
    partial void OnbSubscriptionChanging(int value);
    partial void OnbSubscriptionChanged();
    partial void OntheDateChanging(System.DateTime value);
    partial void OntheDateChanged();
    #endregion
		
		public TUser3513()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theUniqueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int theUniqueID
		{
			get
			{
				return this._theUniqueID;
			}
			set
			{
				if ((this._theUniqueID != value))
				{
					this.OntheUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._theUniqueID = value;
					this.SendPropertyChanged("theUniqueID");
					this.OntheUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theID", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string theID
		{
			get
			{
				return this._theID;
			}
			set
			{
				if ((this._theID != value))
				{
					this.OntheIDChanging(value);
					this.SendPropertyChanging();
					this._theID = value;
					this.SendPropertyChanged("theID");
					this.OntheIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thePW", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string thePW
		{
			get
			{
				return this._thePW;
			}
			set
			{
				if ((this._thePW != value))
				{
					this.OnthePWChanging(value);
					this.SendPropertyChanging();
					this._thePW = value;
					this.SendPropertyChanged("thePW");
					this.OnthePWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theName", DbType="NVarChar(256)")]
		public string theName
		{
			get
			{
				return this._theName;
			}
			set
			{
				if ((this._theName != value))
				{
					this.OntheNameChanging(value);
					this.SendPropertyChanging();
					this._theName = value;
					this.SendPropertyChanged("theName");
					this.OntheNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theEMail", DbType="NVarChar(256)")]
		public string theEMail
		{
			get
			{
				return this._theEMail;
			}
			set
			{
				if ((this._theEMail != value))
				{
					this.OntheEMailChanging(value);
					this.SendPropertyChanging();
					this._theEMail = value;
					this.SendPropertyChanged("theEMail");
					this.OntheEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bSubscription", DbType="Int NOT NULL")]
		public int bSubscription
		{
			get
			{
				return this._bSubscription;
			}
			set
			{
				if ((this._bSubscription != value))
				{
					this.OnbSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._bSubscription = value;
					this.SendPropertyChanged("bSubscription");
					this.OnbSubscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theDate", DbType="DateTime NOT NULL")]
		public System.DateTime theDate
		{
			get
			{
				return this._theDate;
			}
			set
			{
				if ((this._theDate != value))
				{
					this.OntheDateChanging(value);
					this.SendPropertyChanging();
					this._theDate = value;
					this.SendPropertyChanged("theDate");
					this.OntheDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
